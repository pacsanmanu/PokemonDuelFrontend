{"ast":null,"code":"var _jsxFileName = \"/home/mpacheco/Github/ProjectFrontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport BattleArena from './components/BattleArena';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [teamInput, setTeamInput] = useState('{\"player\": [\"charizard\", \"mewtwo\", \"pikachu\"], \"ai\": [\"rattata\", \"raticate\", \"spearow\"]}');\n  const [combatData, setCombatData] = useState(null); // Se almacenarán aquí los datos del combate\n\n  const handleStartCombat = async () => {\n    try {\n      const response = await fetch('http://localhost:3000/combat/start', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: teamInput\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setCombatData(data); // Almacenar los datos del combate para pasárselos a BattleArena\n    } catch (error) {\n      console.error('Failed to start combat:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !combatData ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: teamInput,\n        onChange: e => setTeamInput(e.target.value),\n        rows: \"5\",\n        style: {\n          width: '100%',\n          marginBottom: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStartCombat,\n        children: \"Start Combat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(BattleArena, {\n      combatData: combatData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) // Pasar los datos del combate como prop a BattleArena\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"giBTVHTMEYpCKFRDqJzfOX6cZT8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BattleArena","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","teamInput","setTeamInput","combatData","setCombatData","handleStartCombat","response","fetch","method","headers","body","ok","Error","data","json","error","console","children","value","onChange","e","target","rows","style","width","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/mpacheco/Github/ProjectFrontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport BattleArena from './components/BattleArena';\n\nconst App = () => {\n  const [teamInput, setTeamInput] = useState('{\"player\": [\"charizard\", \"mewtwo\", \"pikachu\"], \"ai\": [\"rattata\", \"raticate\", \"spearow\"]}');\n  const [combatData, setCombatData] = useState(null); // Se almacenarán aquí los datos del combate\n\n  const handleStartCombat = async () => {\n    try {\n      const response = await fetch('http://localhost:3000/combat/start', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: teamInput\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setCombatData(data); // Almacenar los datos del combate para pasárselos a BattleArena\n    } catch (error) {\n      console.error('Failed to start combat:', error);\n    }\n  };\n\n  return (\n    <div>\n      {!combatData ? (\n        <>\n          <textarea\n            value={teamInput}\n            onChange={(e) => setTeamInput(e.target.value)}\n            rows=\"5\"\n            style={{ width: '100%', marginBottom: '10px' }}\n          />\n          <button onClick={handleStartCombat}>Start Combat</button>\n        </>\n      ) : (\n        <BattleArena combatData={combatData} /> // Pasar los datos del combate como prop a BattleArena\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,0FAA0F,CAAC;EACtI,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEpD,MAAMY,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;QACjEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAET;MACR,CAAC,CAAC;MACF,IAAI,CAACK,QAAQ,CAACK,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClCV,aAAa,CAACS,IAAI,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;EAED,oBACEnB,OAAA;IAAAqB,QAAA,EACG,CAACd,UAAU,gBACVP,OAAA,CAAAE,SAAA;MAAAmB,QAAA,gBACErB,OAAA;QACEsB,KAAK,EAAEjB,SAAU;QACjBkB,QAAQ,EAAGC,CAAC,IAAKlB,YAAY,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC9CI,IAAI,EAAC,GAAG;QACRC,KAAK,EAAE;UAAEC,KAAK,EAAE,MAAM;UAAEC,YAAY,EAAE;QAAO;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACFjC,OAAA;QAAQkC,OAAO,EAAEzB,iBAAkB;QAAAY,QAAA,EAAC;MAAY;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACzD,CAAC,gBAEHjC,OAAA,CAACF,WAAW;MAACS,UAAU,EAAEA;IAAW;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC;EACzC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC7B,EAAA,CAtCID,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AAwCT,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/mpacheco/Github/ProjectFrontend/src/components/BattleArena.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PokemonDetails from './PokemonDetails'; // Verifica la implementación de este componente\nimport TeamDisplay from './TeamDisplay'; // Verifica la implementación de este componente\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BattleArena = ({\n  combatData\n}) => {\n  _s();\n  const [combatState, setCombatState] = useState({\n    combatId: null,\n    userStatus: null,\n    aiStatus: null,\n    userTeam: [],\n    aiTeam: []\n  });\n  useEffect(() => {\n    if (combatData) {\n      setCombatState(prevState => ({\n        ...prevState,\n        combatId: combatData.combatId,\n        userStatus: combatData.playerPokemons[0],\n        // Asumiendo el primer Pokémon como activo\n        aiStatus: combatData.aiPokemons[0],\n        // Asumiendo el primer Pokémon como activo\n        userTeam: combatData.playerPokemons,\n        aiTeam: combatData.aiPokemons\n      }));\n    }\n  }, [combatData]);\n  const updateCombatState = data => {\n    // Asegura que los cambios en el estado sean detectados por React\n    setCombatState(prevState => ({\n      ...prevState,\n      combatId: data.combatId,\n      userStatus: data.userStatus || prevState.userStatus,\n      aiStatus: data.aiStatus || prevState.aiStatus,\n      userTeam: data.userTeam || prevState.userTeam,\n      aiTeam: data.aiTeam || prevState.aiTeam\n    }));\n  };\n  const handleAction = async (endpoint, body) => {\n    try {\n      const response = await fetch(`http://localhost:3000/combat/${endpoint}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      updateCombatState(data);\n    } catch (error) {\n      console.error(`Failed to execute action: ${endpoint}`, error);\n    }\n  };\n  const handleAttack = moveIndex => {\n    handleAction('attack', {\n      combatId: combatState.combatId,\n      moveIndex\n    });\n  };\n  const handleChangePokemon = pokemonName => {\n    handleAction('change', {\n      combatId: combatState.combatId,\n      pokemonName\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [combatState.userStatus && /*#__PURE__*/_jsxDEV(PokemonDetails, {\n      role: \"user\",\n      pokemon: combatState.userStatus,\n      onAttack: handleAttack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), combatState.aiStatus && /*#__PURE__*/_jsxDEV(PokemonDetails, {\n      role: \"ai\",\n      pokemon: combatState.aiStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TeamDisplay, {\n      team: combatState.userTeam,\n      onChangePokemon: handleChangePokemon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(BattleArena, \"7hfIh1TLPYS//DfH5liSTZDtCRM=\");\n_c = BattleArena;\nexport default BattleArena;\nvar _c;\n$RefreshReg$(_c, \"BattleArena\");","map":{"version":3,"names":["React","useState","useEffect","PokemonDetails","TeamDisplay","jsxDEV","_jsxDEV","BattleArena","combatData","_s","combatState","setCombatState","combatId","userStatus","aiStatus","userTeam","aiTeam","prevState","playerPokemons","aiPokemons","updateCombatState","data","handleAction","endpoint","body","response","fetch","method","headers","JSON","stringify","ok","Error","json","error","console","handleAttack","moveIndex","handleChangePokemon","pokemonName","children","role","pokemon","onAttack","fileName","_jsxFileName","lineNumber","columnNumber","team","onChangePokemon","_c","$RefreshReg$"],"sources":["/home/mpacheco/Github/ProjectFrontend/src/components/BattleArena.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PokemonDetails from './PokemonDetails'; // Verifica la implementación de este componente\nimport TeamDisplay from './TeamDisplay'; // Verifica la implementación de este componente\n\nconst BattleArena = ({ combatData }) => {\n  const [combatState, setCombatState] = useState({\n    combatId: null,\n    userStatus: null,\n    aiStatus: null,\n    userTeam: [],\n    aiTeam: []\n  });\n\n  useEffect(() => {\n    if (combatData) {\n      setCombatState(prevState => ({\n        ...prevState,\n        combatId: combatData.combatId,\n        userStatus: combatData.playerPokemons[0], // Asumiendo el primer Pokémon como activo\n        aiStatus: combatData.aiPokemons[0], // Asumiendo el primer Pokémon como activo\n        userTeam: combatData.playerPokemons,\n        aiTeam: combatData.aiPokemons\n      }));\n    }\n  }, [combatData]);\n\n  const updateCombatState = (data) => {\n    // Asegura que los cambios en el estado sean detectados por React\n    setCombatState(prevState => ({\n      ...prevState,\n      combatId: data.combatId,\n      userStatus: data.userStatus || prevState.userStatus,\n      aiStatus: data.aiStatus || prevState.aiStatus,\n      userTeam: data.userTeam || prevState.userTeam,\n      aiTeam: data.aiTeam || prevState.aiTeam,\n    }));\n  };\n\n  const handleAction = async (endpoint, body) => {\n    try {\n      const response = await fetch(`http://localhost:3000/combat/${endpoint}`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(body)\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      updateCombatState(data);\n    } catch (error) {\n      console.error(`Failed to execute action: ${endpoint}`, error);\n    }\n  };\n\n  const handleAttack = (moveIndex) => {\n    handleAction('attack', { combatId: combatState.combatId, moveIndex });\n  };\n\n  const handleChangePokemon = (pokemonName) => {\n    handleAction('change', { combatId: combatState.combatId, pokemonName });\n  };\n\n  return (\n    <div>\n      {combatState.userStatus && (\n        <PokemonDetails\n          role=\"user\"\n          pokemon={combatState.userStatus}\n          onAttack={handleAttack}\n        />\n      )}\n      {combatState.aiStatus && (\n        <PokemonDetails\n          role=\"ai\"\n          pokemon={combatState.aiStatus}\n        />\n      )}\n      <TeamDisplay\n        team={combatState.userTeam}\n        onChangePokemon={handleChangePokemon}\n      />\n    </div>\n  );\n};\n\nexport default BattleArena;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}